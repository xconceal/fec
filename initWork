#!/usr/bin/env sh 

installRuby ()
{
  curl -L https://get.rvm.io | bash -s stable
  source ~/.rvm/scripts/rvm
  rvm install ruby
}

installBrew ()
{
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
}

installNvm ()
{
  curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
  if [ $? -eq 0 ]; then
    echo "Installing Lastest Node Version\n"
    nvm install --lts
  fi
}

installGit ()
{
  brew update
  brew install git
}

installYarn ()
{
  brew update
  brew install yarn
}

installVueCli ()
{
  npm install --global vue-cli
}

installCD ()
{
  npm install --global chromedriver --registry=https://registry.npm.taobao.org --chromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver
}

installNS ()
{
  #need to change npm registry to TaoBao
  npm install --global node-sass --registry=https://registry.npm.taobao.org
}

checkCommand ()
{
  echo "Checking $1..."
  result=`which $1`
  if [ -z ${result} ]; then
    echo "$1 can not be found\n"
    # install rvm for ubuntu
    echo "Installing $1"
    if [ $1 = 'ruby' ]; then
      installRuby
    fi
    if [ $1 = 'brew' ]; then
      installBrew
    fi
    if [ $1 = 'node' ]; then
      installNvm
    fi
    if [ $1 = 'git' ]; then
      installGit
    fi
    if [ $1 = 'yarn' ]; then
      installYarn
    fi
    if [ $1 = 'vue' ]; then
      installVueCli
    fi
    if [ $1 = 'chromedriver' ]; then
      installCD
    fi
    if [ $1 = 'node-sass' ]; then
      installNS
    fi
    if [ $? -eq 0 ]; then
      echo "$1 installed"
    fi
  else
    echo "found it in $result, done\n"
  fi
}

echo "\n\033[4;31mInitialize Front-End WorkSpace\033[0m\n"

checkCommand 'ruby'
checkCommand 'brew'
checkCommand 'node'
checkCommand 'git'
checkCommand 'yarn'
checkCommand 'vue'

read -p "Need node-sass? (y/n): " nns

if [ "$nns" = "y" -o "$nns" = "Y" ]; then
  checkCommand 'chromedriver'
  checkCommand 'node-sass'
fi

echo "Need other commands?" 
read -p "Input command name or f to Finish: " command

if [ "$command" = "f" -o "$command" = "F" ]; then
  exit
else
  if [ -z ${command} ]; then
    exit
  else
    brew update
    brew install $command
  fi
fi

exit 0
